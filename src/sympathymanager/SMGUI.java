/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package sympathymanager;


import java.util.ArrayList;

import java.awt.Color;
import java.awt.Component;
import java.awt.Desktop;
import javax.swing.ImageIcon;
import javax.swing.JLabel;
import javax.swing.JList;
import javax.swing.JOptionPane;
import javax.swing.ListCellRenderer;
import javax.swing.SwingWorker;

import java.net.URI;
import org.jsoup.*;

import java.net.URL;

/**
 *
 * @author Charlie
 */
public class SMGUI extends javax.swing.JFrame
{
    private Connection connection;
    private MySqlConnection database = new MySqlConnection();
    private ArrayList<Deceased> databaseList = new ArrayList<>();
    private ArrayList<Deceased> jSoupList = new ArrayList<>();
    private ArrayList<Deceased> dbList = new ArrayList<>();
    private boolean hasBeenToggled;

    /** Creates new form SMGUI */
    public SMGUI()
    {

        initComponents();

        jLayeredPane1.setVisible(true);
        Mgmt.setVisible(false);
        jLayeredPane2.setVisible(false);
        Compare.setVisible(false);
        submitButton.setVisible(false);
        SympathyEmails.setVisible(false);
        CancelPayment.setVisible(false);
          Revert.setVisible(false);
          ManualSubmit.setVisible(false);
        try
        {
            java.net.URL imgURL = new URL(
              "https://encrypted-tbn3.gstatic.com/images?q=tbn:ANd9GcRcdfT66-akWVg8x0lNBhZobAwloDbou0I49xxFD2MLHKycsROG");
            ImageIcon titleIcon = new ImageIcon(imgURL);
            jLabel2.setIcon(titleIcon);
        }
        catch ( Exception e )
        {
            e.printStackTrace();
        }

    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents()
    {

        jPanel2 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jProgressBar1 = new javax.swing.JProgressBar();
        Title = new javax.swing.JLabel();
        jLayeredPane1 = new javax.swing.JLayeredPane();
        jScrollPane1 = new javax.swing.JScrollPane();
        jList1 = new javax.swing.JList();
        jLayeredPane3 = new javax.swing.JLayeredPane();
        jLayeredPane2 = new javax.swing.JLayeredPane();
        compareNameLabel = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        DatabaseLName = new javax.swing.JLabel();
        ObitLName = new javax.swing.JLabel();
        DbTown = new javax.swing.JLabel();
        obitTown = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        DbFName = new javax.swing.JLabel();
        ObitFname = new javax.swing.JLabel();
        dbMiddle = new javax.swing.JLabel();
        obitMiddle = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        submitButton = new javax.swing.JButton();
        Mgmt = new javax.swing.JLayeredPane();
        jScrollPane2 = new javax.swing.JScrollPane();
        MgmtList = new javax.swing.JList();
        jButton3 = new javax.swing.JButton();
        SympathyEmails = new javax.swing.JButton();
        CancelPayment = new javax.swing.JButton();
        Revert = new javax.swing.JButton();
        Compare = new javax.swing.JToggleButton();
        ManualSubmit = new javax.swing.JButton();

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(0, 153, 102));
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        setForeground(java.awt.Color.white);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jButton1.setText("Search");
        jButton1.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                jButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 270, 126, 40));
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(787, 78, -1, -1));
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(580, 90, -1, -1));

        jProgressBar1.setBackground(new java.awt.Color(204, 204, 204));
        jProgressBar1.setForeground(new java.awt.Color(51, 204, 0));
        getContentPane().add(jProgressBar1, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 320, 170, -1));

        Title.setFont(new java.awt.Font("Perpetua Titling MT", 0, 24)); // NOI18N
        Title.setText("Sympathy Manager");
        getContentPane().add(Title, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 30, 270, 34));

        jList1.setModel(new javax.swing.AbstractListModel()
            {
                String[] strings = { };
                public int getSize() { return strings.length; }
                public Object getElementAt(int i) { return strings[i]; }
            });
            jScrollPane1.setViewportView(jList1);

            jScrollPane1.setBounds(100, 60, 360, 130);
            jLayeredPane1.add(jScrollPane1, javax.swing.JLayeredPane.DEFAULT_LAYER);
            jLayeredPane3.setBounds(80, 40, 0, 0);
            jLayeredPane1.add(jLayeredPane3, javax.swing.JLayeredPane.DEFAULT_LAYER);

            getContentPane().add(jLayeredPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 30, 560, 230));

            jLayeredPane2.setBackground(new java.awt.Color(204, 204, 255));

            compareNameLabel.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
            compareNameLabel.setText("Name");
            compareNameLabel.setBounds(30, 30, 50, 40);
            jLayeredPane2.add(compareNameLabel, javax.swing.JLayeredPane.DEFAULT_LAYER);

            jLabel4.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
            jLabel4.setText("Town");
            jLabel4.setBounds(30, 100, 34, 17);
            jLayeredPane2.add(jLabel4, javax.swing.JLayeredPane.DEFAULT_LAYER);

            DatabaseLName.setText("DBName");
            DatabaseLName.setBounds(150, 60, 130, 30);
            jLayeredPane2.add(DatabaseLName, javax.swing.JLayeredPane.DEFAULT_LAYER);

            ObitLName.setText("obitName");
            ObitLName.setBounds(290, 60, 100, 30);
            jLayeredPane2.add(ObitLName, javax.swing.JLayeredPane.DEFAULT_LAYER);

            DbTown.setText("DBTown");
            DbTown.setBounds(150, 90, 130, 40);
            jLayeredPane2.add(DbTown, javax.swing.JLayeredPane.DEFAULT_LAYER);

            obitTown.setText("obitTown");
            obitTown.setBounds(290, 100, 110, 20);
            jLayeredPane2.add(obitTown, javax.swing.JLayeredPane.DEFAULT_LAYER);

            jButton2.setText("Go to Url");
            jButton2.addActionListener(new java.awt.event.ActionListener()
            {
                public void actionPerformed(java.awt.event.ActionEvent evt)
                {
                    jButton2ActionPerformed(evt);
                }
            });
            jButton2.setBounds(190, 130, 110, 20);
            jLayeredPane2.add(jButton2, javax.swing.JLayeredPane.DEFAULT_LAYER);

            DbFName.setText("jLabel5");
            DbFName.setBounds(150, 30, 70, 14);
            jLayeredPane2.add(DbFName, javax.swing.JLayeredPane.DEFAULT_LAYER);

            ObitFname.setText("jLabel5");
            ObitFname.setBounds(290, 30, 60, 14);
            jLayeredPane2.add(ObitFname, javax.swing.JLayeredPane.DEFAULT_LAYER);

            dbMiddle.setText("middleName");
            dbMiddle.setBounds(150, 50, 100, 14);
            jLayeredPane2.add(dbMiddle, javax.swing.JLayeredPane.DEFAULT_LAYER);

            obitMiddle.setText("jLabel6");
            obitMiddle.setBounds(290, 50, 60, 14);
            jLayeredPane2.add(obitMiddle, javax.swing.JLayeredPane.DEFAULT_LAYER);

            jLabel3.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
            jLabel3.setText("From DB");
            jLabel3.setBounds(280, 0, 90, 22);
            jLayeredPane2.add(jLabel3, javax.swing.JLayeredPane.DEFAULT_LAYER);

            jLabel5.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
            jLabel5.setText("From Obit");
            jLabel5.setBounds(130, 4, 90, 20);
            jLayeredPane2.add(jLabel5, javax.swing.JLayeredPane.DEFAULT_LAYER);

            getContentPane().add(jLayeredPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(165, 85, 420, 180));

            submitButton.setText("Confirm");
            submitButton.addActionListener(new java.awt.event.ActionListener()
            {
                public void actionPerformed(java.awt.event.ActionEvent evt)
                {
                    submitButtonActionPerformed(evt);
                }
            });
            getContentPane().add(submitButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(600, 290, 140, 60));

            MgmtList.setModel(new javax.swing.AbstractListModel()
            {
                String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
                public int getSize() { return strings.length; }
                public Object getElementAt(int i) { return strings[i]; }
            });
            jScrollPane2.setViewportView(MgmtList);

            jScrollPane2.setBounds(70, 30, 360, 130);
            Mgmt.add(jScrollPane2, javax.swing.JLayeredPane.DEFAULT_LAYER);

            getContentPane().add(Mgmt, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 60, 530, 190));

            jButton3.setText("Manager Page");
            jButton3.addActionListener(new java.awt.event.ActionListener()
            {
                public void actionPerformed(java.awt.event.ActionEvent evt)
                {
                    jButton3ActionPerformed(evt);
                }
            });
            getContentPane().add(jButton3, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 300, 140, 30));

            SympathyEmails.setText("Send Sympathy Emails");
            SympathyEmails.addActionListener(new java.awt.event.ActionListener()
            {
                public void actionPerformed(java.awt.event.ActionEvent evt)
                {
                    SympathyEmailsActionPerformed(evt);
                }
            });
            getContentPane().add(SympathyEmails, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 300, 170, 30));

            CancelPayment.setText("Cancel Payments");
            CancelPayment.addActionListener(new java.awt.event.ActionListener()
            {
                public void actionPerformed(java.awt.event.ActionEvent evt)
                {
                    CancelPaymentActionPerformed(evt);
                }
            });
            getContentPane().add(CancelPayment, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 300, 150, 30));

            Revert.setText("Revert");
            Revert.addActionListener(new java.awt.event.ActionListener()
            {
                public void actionPerformed(java.awt.event.ActionEvent evt)
                {
                    RevertActionPerformed(evt);
                }
            });
            getContentPane().add(Revert, new org.netbeans.lib.awtextra.AbsoluteConstraints(600, 293, 130, 60));

            Compare.setText("Compare");
            Compare.addActionListener(new java.awt.event.ActionListener()
            {
                public void actionPerformed(java.awt.event.ActionEvent evt)
                {
                    CompareActionPerformed(evt);
                }
            });
            getContentPane().add(Compare, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 120, -1, -1));

            ManualSubmit.setText("Manual Submit");
            ManualSubmit.addActionListener(new java.awt.event.ActionListener()
            {
                public void actionPerformed(java.awt.event.ActionEvent evt)
                {
                    ManualSubmitActionPerformed(evt);
                }
            });
            getContentPane().add(ManualSubmit, new org.netbeans.lib.awtextra.AbsoluteConstraints(600, 260, 130, -1));

            pack();
        }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_jButton1ActionPerformed
    {//GEN-HEADEREND:event_jButton1ActionPerformed


        jProgressBar1.setIndeterminate(true);
        SwingWorker worker = new SwingWorker<ArrayList<Deceased>, Void>()
        {
            BostonGlobe bc = new BostonGlobe();

            @Override
            public ArrayList<Deceased> doInBackground()
            {

                connection = bc.jsoupConnection();
                return bc.getNames();
            }

            @Override
            public void done()
            {
                try
                {
                    jSoupList = get();

                    jProgressBar1.setIndeterminate(false);
                    if ( !jSoupList.isEmpty() )
                    {
                        database = new MySqlConnection();
                        ArrayList<Deceased> confirmed = database.GetConfirmedList();

                        MgmtList.setListData(confirmed.toArray());

                         dbList = bc.getDbList();
                        jList1.setListData(jSoupList.toArray());
                        jList1.setSelectedIndex(0);
                        jList1.setToolTipText(String.format("%s", jSoupList.get(jList1.
                          getSelectedIndex()).
                          getFname()));
                        jList1.setCellRenderer(new MyCellRenderer());
                        Compare.setVisible(true);
                        hasBeenToggled = true;


                        submitButton.setVisible(true);
                    }
                    else
                    {
                        String[] noMatch =
                        {
                            "No Matching Names Found"
                        };
                        jList1.setListData(noMatch);
                    }



                }
                catch ( InterruptedException ignore )
                {
                }
                catch ( java.util.concurrent.ExecutionException e )
                {
                    e.printStackTrace();
                }

            }
        };
        worker.execute();




        try
        {

            databaseList = database.readDataBase();


        }
        catch ( Exception e )
        {
            System.out.println(e.toString());
        }


    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_jButton2ActionPerformed
    {//GEN-HEADEREND:event_jButton2ActionPerformed
        Desktop desktop = Desktop.isDesktopSupported() ? Desktop.getDesktop() : null;
        if ( desktop != null && desktop.isSupported(Desktop.Action.BROWSE) )
        {
            try
            {
                desktop.browse(new URI(( ( Deceased ) jList1.getSelectedValue() ).getURL()));
            }
            catch ( Exception e )
            {

                e.printStackTrace();
            }
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void submitButtonActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_submitButtonActionPerformed
    {//GEN-HEADEREND:event_submitButtonActionPerformed

        int choice = JOptionPane.showConfirmDialog(null, "Are You Sure?");
        if ( choice == 0 )
        {
            database = new MySqlConnection();

            boolean success = database.submit(dbList.get(jList1.getSelectedIndex()), ( ( Deceased ) jList1.
              getSelectedValue() ).getPicture());
            if(success)
            {
                JOptionPane.showMessageDialog(null, "Success");
                Deceased toDelete = dbList.get(jList1.getSelectedIndex());
                dbList.remove(jList1.getSelectedIndex());
                jSoupList.remove(toDelete);
                jList1.setListData(jSoupList.toArray());
                jList1.setSelectedIndex(0);
            }

        }




    }//GEN-LAST:event_submitButtonActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_jButton3ActionPerformed
    {//GEN-HEADEREND:event_jButton3ActionPerformed
        if ( !Mgmt.isVisible() )
        {

            Mgmt.setVisible(true);
            Compare.setVisible(false);
            jLayeredPane1.setVisible(false);
            jButton1.setVisible(false);
            jButton2.setVisible(false);
            database = new MySqlConnection();
            MgmtList.setListData(database.GetConfirmedList().toArray());
            submitButton.setVisible(false);
            MgmtList.setCellRenderer(new MyCellRenderer2());
            MgmtList.setSelectedIndex(0);
            jProgressBar1.setVisible(false);
            SympathyEmails.setVisible(true);
        CancelPayment.setVisible(true);
        Revert.setVisible(true);
        ManualSubmit.setVisible(true);


            jButton3.setText("Back");
        }
        else
        {
            Mgmt.setVisible(false);
            jLayeredPane1.setVisible(true);
            if ( hasBeenToggled )
            {
                Compare.setVisible(true);
            }
            jButton1.setVisible(true);
            jButton2.setVisible(true);
            jButton3.setText("Manager Page");
            submitButton.setVisible(true);
            jProgressBar1.setVisible(true);
            SympathyEmails.setVisible(false);
        CancelPayment.setVisible(false);
          Revert.setVisible(false);
             ManualSubmit.setVisible(false);
        }
    }//GEN-LAST:event_jButton3ActionPerformed

    private void SympathyEmailsActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_SympathyEmailsActionPerformed
    {//GEN-HEADEREND:event_SympathyEmailsActionPerformed
       JOptionPane.showMessageDialog(null, "Email Sent");
    }//GEN-LAST:event_SympathyEmailsActionPerformed

    private void CancelPaymentActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_CancelPaymentActionPerformed
    {//GEN-HEADEREND:event_CancelPaymentActionPerformed
         int choice = JOptionPane.showConfirmDialog(null, "Are You Sure?");
        if ( choice == 0 )
        {
        JOptionPane.showMessageDialog(null, "Payments Cancelled");
        }
    }//GEN-LAST:event_CancelPaymentActionPerformed

    private void RevertActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_RevertActionPerformed
    {//GEN-HEADEREND:event_RevertActionPerformed
       int choice = JOptionPane.showConfirmDialog(null, "Are You Sure?");
        if ( choice == 0 )
        {
            database = new MySqlConnection();
       database.revert(((Deceased)(MgmtList.getSelectedValue())).getId());
       MgmtList.setListData(database.GetConfirmedList().toArray());
            JOptionPane.showMessageDialog(null, "Successfully Reverted");
            MgmtList.setSelectedIndex(0);

        }

    }//GEN-LAST:event_RevertActionPerformed

    private void CompareActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_CompareActionPerformed
    {//GEN-HEADEREND:event_CompareActionPerformed
        boolean toggleVisibility = false;
        if ( !jLayeredPane1.isVisible() )
        {
            toggleVisibility = true;
        }
        int index = jList1.getSelectedIndex();
        String lastname = ( jSoupList.get(index) ).getLName();
        String firstname = ( jSoupList.get(index) ).getFname();
        String dbLName = dbList.get(index).getLName();
        String dbfName = dbList.get(index).getFname();
        String thisTown = ( jSoupList.get(index) ).getTown();
        String dbTown = dbList.get(index).getTown();
        DatabaseLName.setText(lastname);
        DbFName.setText(firstname);
        DbTown.setText(thisTown);
        dbMiddle.setText(( ( Deceased ) jList1.getSelectedValue() ).getMI());
        obitMiddle.setText(dbList.get(index).getMI());
        ObitLName.setText(dbLName);
        ObitFname.setText(dbfName);
        obitTown.setText(dbList.get(index).getTown());
        if(!thisTown.equals(dbList.get(index).getTown()))
        {
            obitTown.setForeground(Color.red);
        }
        else
        {
            obitTown.setForeground(Color.DARK_GRAY);
        }
        if ( ( ( Deceased ) jList1.getSelectedValue() ).getMI() != null &&
            dbList.get(index).getMI() != null )
        {
            if ( jSoupList.get(index).getMI().charAt(0) == dbList.get(index).getMI().charAt(0) )
        {
            obitMiddle.setForeground(Color.DARK_GRAY);
        }
        else
        {
            obitMiddle.setForeground(Color.red);
        }
        }
        jLayeredPane1.setVisible(toggleVisibility);

        jLayeredPane2.setVisible(!toggleVisibility);
        jButton1.setVisible(toggleVisibility);
        jProgressBar1.setVisible(toggleVisibility);
    }//GEN-LAST:event_CompareActionPerformed

    private void ManualSubmitActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_ManualSubmitActionPerformed
    {//GEN-HEADEREND:event_ManualSubmitActionPerformed
          String memberId = JOptionPane.showInputDialog("Enter MemberId");
          if (memberId != null)
          {
              database.manualSubmit(memberId);
               database = new MySqlConnection();
          MgmtList.setListData(database.GetConfirmedList().toArray());
          }


    }//GEN-LAST:event_ManualSubmitActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main( String args[] )
    {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available,
         * stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try
        {
            for ( javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.
              getInstalledLookAndFeels() )
            {
                if ( "Nimbus".equals(info.getName()) )
                {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        }
        catch ( ClassNotFoundException ex )
        {
            java.util.logging.Logger.getLogger(SMGUI.class.getName()).log(
              java.util.logging.Level.SEVERE, null, ex);
        }
        catch ( InstantiationException ex )
        {
            java.util.logging.Logger.getLogger(SMGUI.class.getName()).log(
              java.util.logging.Level.SEVERE, null, ex);
        }
        catch ( IllegalAccessException ex )
        {
            java.util.logging.Logger.getLogger(SMGUI.class.getName()).log(
              java.util.logging.Level.SEVERE, null, ex);
        }
        catch ( javax.swing.UnsupportedLookAndFeelException ex )
        {
            java.util.logging.Logger.getLogger(SMGUI.class.getName()).log(
              java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable()
        {
            public void run()
            {
                new SMGUI().setVisible(true);

            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton CancelPayment;
    private javax.swing.JToggleButton Compare;
    private javax.swing.JLabel DatabaseLName;
    private javax.swing.JLabel DbFName;
    private javax.swing.JLabel DbTown;
    private javax.swing.JButton ManualSubmit;
    private javax.swing.JLayeredPane Mgmt;
    private javax.swing.JList MgmtList;
    private javax.swing.JLabel ObitFname;
    private javax.swing.JLabel ObitLName;
    private javax.swing.JButton Revert;
    private javax.swing.JButton SympathyEmails;
    private javax.swing.JLabel Title;
    private javax.swing.JLabel compareNameLabel;
    private javax.swing.JLabel dbMiddle;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLayeredPane jLayeredPane1;
    private javax.swing.JLayeredPane jLayeredPane2;
    private javax.swing.JLayeredPane jLayeredPane3;
    private javax.swing.JList jList1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JProgressBar jProgressBar1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel obitMiddle;
    private javax.swing.JLabel obitTown;
    private javax.swing.JButton submitButton;
    // End of variables declaration//GEN-END:variables

    class MyCellRenderer extends JLabel implements ListCellRenderer<Object>
    {
        public Component getListCellRendererComponent(
          JList<?> list, // the list
          Object value, // value to display
          int index, // cell index
          boolean isSelected, // is the cell selected
          boolean cellHasFocus )    // does the cell have focus
        {
            String s = value.toString();
            setText(s);
            if(jSoupList.size() > 1 )
            setToolTipText(String.format("%s has a likelihood of %d", jSoupList.get(index).
              getFname(), jSoupList.get(index).getLikelihood()));
            setBackground(list.getSelectionBackground());
            setForeground(list.getSelectionForeground());
            switch ( jSoupList.get(index).getLikelihood() )
            {
                case 1:
                    setForeground(new Color(0xc0, 0x00, 0x00));
                    break;
                case 2:
                    setForeground(new Color(0xC0, 0xC0, 0x00));
                    break;
                case 3:
                    setForeground(new Color(0x00, 0xC0, 0x00));
                    break;
            }

            if ( isSelected )
            {

                try
                {
                    URL where = new URL(( ( ( Deceased ) jList1.getSelectedValue() ).getPicture() ));
                    ImageIcon picture = new ImageIcon(where);
                    jLabel2.setIcon(picture);

                }
                catch ( Exception e )
                {
                    System.out.println(e.toString());
                }

            }
            else
            {

                setBackground(list.getBackground());

            }
            setEnabled(list.isEnabled());
            setFont(list.getFont());
            setOpaque(true);
            return this;
        }
    }

    class MyCellRenderer2 extends JLabel implements ListCellRenderer<Object>
    {
        public Component getListCellRendererComponent(
          JList<?> list, // the list
          Object value, // value to display
          int index, // cell index
          boolean isSelected, // is the cell selected
          boolean cellHasFocus )    // does the cell have focus
        {
            String s = value.toString();
            setText(s);

            setBackground(list.getSelectionBackground());
            setForeground(list.getSelectionForeground());

            if ( isSelected )
            {

                try
                {
                    URL where = new URL(
                      ( ( ( Deceased ) MgmtList.getSelectedValue() ).getPicture() ));

                    ImageIcon picture = null;
                    if ( where != null )
                    {
                        picture = new ImageIcon(where);
                    }

                    jLabel2.setIcon(picture);

                }
                catch ( Exception e )
                {
                    //System.out.println(e.toString());
                }

            }
            else
            {

                setBackground(list.getBackground());

            }
            setEnabled(list.isEnabled());
            setFont(list.getFont());
            setOpaque(true);
            return this;
        }
    }
}
